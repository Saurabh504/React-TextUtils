{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","Color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","toLowerCase","copyText","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","App","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1575612d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\" >{props.title}</Link> */}\r\n                <a className=\"navbar-brand\" href=\"/\" >{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.aboutText}</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/\">Home</a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* dark mode button */}\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'white'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    // title: \"Set title here\",\r\n    aboutText: \"About us\"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"UpperCase was clicked\", text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"UpperCase was clicked\", text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        let copyText = document.getElementById(\"mybox\")\r\n        copyText.select()\r\n        navigator.clipboard.writeText(copyText.value)\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value)\r\n    } \r\n\r\n    const [text, setText] = useState(\"\")\r\n    // text = \"new text\"    //wrong way to update the text\r\n    // setText(\"new Text\")  // correct way to update the text\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{Color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value ={text} style={{backgroundColor: props.mode==='dark'?'#4c84d7':'white'}} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to UppeCase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-0\" onClick={handleCopy}>Copy Text</button>\r\n        </div>\r\n\r\n        <div className=\"container\" style={{Color: props.mode==='dark'?'white':'black'}}>\r\n            <h3>Your text summary</h3>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} minuts to read</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0? text: \"Enter something in the above textbox to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\nimport React, { useState } from 'react'\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#4c84d7';\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n\n        <Navbar title=\"Textut\" mode={mode} toggleMode={toggleMode} />\n\n        <div className=\"container my-3\">\n            {/* <Switch>\n              <Route exact path=\"/about\">\n                <About />\n              </Route>\n              <Route exact path=\"/\">\n                <Textform heading=\"Enter the text to analyze\" mode={mode} />\n              </Route>\n              <Link></Link>\n            </Switch> */}\n              <Textform heading=\"Enter the text to analyze\" mode={mode} />\n\n        </div>\n\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}